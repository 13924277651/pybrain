options (
	default "lib"
	
	project "Arac - Neural Network Composition Library"
	author "Justin S Bayer, bayer.justin@googlemail.com"
	version "pre0.1"

	compiler "g++"
	flags "-g -I/usr/local/include -I/usr/include -I/sw/include" 
   lnflags "-L/usr/local/lib -L/usr/lib -lm -lblas"
)


depends (
	lib ['basis']
	test.c.build ['lib']
	test.c.run ['test.c.build']
	test.py ['lib']
	test ['test.c.run' 'test.py.run']
	benchmark ['test']
)


imports [
]


targets (

	basis [
		$ %(compiler)s %(flags)s -c src/c/common.c -o src/c/common.o
		$ %(compiler)s %(flags)s -c src/c/functions.c -o src/c/functions.o
		$ %(compiler)s %(flags)s -c src/c/connections/common.c -o src/c/connections/common.o
		$ %(compiler)s %(flags)s -c src/c/connections/connections.c -o src/c/connections/connections.o
		$ %(compiler)s %(flags)s -c src/c/connections/full.c -o src/c/connections/full.o
		$ %(compiler)s %(flags)s -c src/c/connections/identity.c -o src/c/connections/identity.o
		$ %(compiler)s %(flags)s -c src/c/layers/bias.c -o src/c/layers/bias.o
		$ %(compiler)s %(flags)s -c src/c/layers/common.c -o src/c/layers/common.o
		$ %(compiler)s %(flags)s -c src/c/layers/layers.c -o src/c/layers/layers.o
		$ %(compiler)s %(flags)s -c src/c/layers/linear.c -o src/c/layers/linear.o
		$ %(compiler)s %(flags)s -c src/c/layers/lstm.c -o src/c/layers/lstm.o
		$ %(compiler)s %(flags)s -c src/c/layers/mdlstm.c -o src/c/layers/mdlstm.o
		$ %(compiler)s %(flags)s -c src/c/layers/sigmoid.c -o src/c/layers/sigmoid.o
		$ %(compiler)s %(flags)s -c src/c/arac.c -o src/c/arac.o
	]

	lib [
		$ %(compiler)s %(flags)s %(lnflags)s -dynamiclib -o libarac.so src/c/common.o src/c/functions.o src/c/layers/common.o src/c/layers/sigmoid.o src/c/layers/linear.o src/c/layers/lstm.o src/c/layers/mdlstm.o src/c/layers/bias.o src/c/layers/layers.o src/c/connections/common.o src/c/connections/full.o src/c/connections/identity.o src/c/connections/connections.o src/c/arac.o
	]
	
	test.c.build [
		$ %(compiler)s %(flags)s -c -o src/c/test_arac.o src/c/test_arac.c
	  $ %(compiler)s -L. -lgtest -larac -o test_arac src/c/test_arac.o
	]
	
	test.c.run [
		$ test_arac
	]
	
	test.py [
		$ python src/python/arac/tests.py
	]
	
	test []
	
	clean [
		$ rm -f test_arac
		$ rm -f src/c/layers/*.o
		$ rm -f src/c/connections/*.o
		$ rm -f *.o
		$ rm -f *.dylib
		$ rm -f *.so
		$ rm -f *.dll
		$ rm -f src/python/arac/*.pyc
	]
)
